1. python笔记
1.1 isinstance type is

 type()不会认为子类是一种父类类型。
 isinstance()会认为子类是一种父类类型
 正常情况下不应该编写代码检查类型的，而应该直接假设被操作的instance具有你希望的属性，否则抛出异常。
  即使需要检查类型，也应该用isinstance来判断，这样你期望类型的subclass也能正常被处理
 （比如，一个函数需要处理Message类型，那么它应该也能处理Message的子类型MyMessage，
  所以应该使用isinstance(arg,Message)这样来判断而不是type(arg) == Message来判断）

  
1.2 迭代工具
 zip的使用
  names=["a","b"]
  ages=[20,30]
  for name,age in zip(names,ages):
   print name+age
   
 编号迭代，enumerate
  for i,str in enumerate(strings):
   if "xxx" in str:
    str[i]=="YYY"
  # i是索引，str是序列的具体值
  
 reversed sorted
   reversed返回的是可迭代对象，sorted返回的是列表
   li=[1,2,3,4]
   sorted(li)
   list [reversed(li)]
  
 
1.3 类的详解，包括公有私有，静态等等，但不涉及继承
 https://www.cnblogs.com/wupeiqi/p/4766801.html

1.4 List 基本
 a.copy
    python 2.7 
    1 基本类型copy
    import copy
     a=[1,2,3]
     b=copy.copy(a)
     c=a[:]
    2 复杂类型copy
    import copy
     a=[1,2,3,[4,5]]
     b=copy.deepcopy(a)

    这两种 a,b 都指向不同对象
 
  b.合并多个list
    1 +
    2 extend
    3 l1[0:0]=l2  就是将l2插入到l1的0位置
    
  c.删除某个值
   a.pop(index) 默认是最后一个,会返回值
   del a[index]
  
  d.负数索引
   a=[1,2,3]
   a[-1]==3 True
 6. is:同一性; in：成员资格 
 x is y   x和y是两个完全相同的对象
  举例
  x=[1,2,3] y=x  z=[1,2,3]
  True: x==y x==z x is y
  False: x is y
  
  in 表示成员资格 常用于序列（字符串是序列的一种） 字典
  
1.5 函数式编程
  map，filter，reduce
  any，all
  eunumerate zip

1.6 classmethod: 会调用类有关的参数，常用于构造，（比如类似于c++的重载）
   staticmethod: 不会调用和类有关的任何方法
   
1.7 itertools-Functions creating iterators for efficient looping
   import itertools
   包含排列 组合 笛卡尔积 
    count,cycle,repeat,
    chain,compress,dropwhile,groupby,ifilter....等等
   参考网址 https://docs.python.org/2.7/library/itertools.html?highlight=itertools
           https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001415616001996f6b32d80b6454caca3d33c965a07611f000
           https://blog.csdn.net/specter11235/article/details/71189486
1.8 python api 2.6
https://www.w3cschool.cn/python/dict

1.9 python  time模块
https://blog.csdn.net/lina_acm/article/details/60151702
https://blog.csdn.net/cmzsteven/article/details/64906245

1.10 lamba 表达式
https://www.cnblogs.com/guigujun/p/6134828.html

1.11 python常见库
https://www.lfd.uci.edu/~gohlke/pythonlibs/

1.12 numpy中的multiply、*、matul 的区别
https://www.cnblogs.com/xiaodongsuibi/p/8305921.html

1.13
新数组的shape属性应该要与原来数组的一致，即新数组元素数量与原数组元素数量要相等。一个参数为-1时，那么reshape函数会根据另一个参数的维度计算出数组的另外一个shape属性值。

1.14 python中np.multiply（）、np.dot（）和星号（*）
https://blog.csdn.net/zenghaitao0128/article/details/78715140
数组场景
multyiply:对应元素相乘，还是一个数组
dot:      秩为1，相乘再相加，输出标量；秩不为1，矩阵乘法
*:        对应元素相乘，还是一个数组
矩阵场景
multyiply:对应位置元素相乘，然后相加，输出标量
dot:      矩阵乘法
*:        矩阵乘法


2.
2.* 机器学习 学霸笔记
http://www.cnblogs.com/tornadomeet/tag/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/default.html?page=2

2.* svm
https://blog.csdn.net/luoshixian099/article/details/51227754
svm
http://www.cnblogs.com/pinard/
看评论
https://www.jianshu.com/p/ba59631855a3


2.* Apriori FP-growth
http://www.cnblogs.com/qwertWZ/p/4510857.html#_labelTop

2.* pairwise_distances
    print(np.argmin(c, axis=0))  # 按每列求出最小值的索引
    print(np.argmin(c, axis=1))  # 按每行求出最小值的索引

2.* scatter
https://blog.csdn.net/anneqiqi/article/details/64125186
其中 s表示点的大小：s参数：指定点的大 小，值和点的面积成正比。它可以是一个数，指定所有点的大小；也可以是数组，分别对每个点指定大小

2.*
有一些指标可用于评估聚类算法相对于真实聚类的结果，其中最重要的是调整rand 指数
（adjusted rand index，ARI）和归一化互信息（normalized mutual information，NMI），二者
都给出了定量的度量，其最佳值为1，0 表示不相关的聚类（虽然ARI 可以取负值）。

2.* KernelDensity 核密度估计
https://blog.csdn.net/unixtch/article/details/78556499


2.*
 eta = 2.0 * oS.X[i, :]*oS.X[j, :].T - oS.X[i, :]*oS.X[i, :].T - oS.X[j, :]*oS.X[j, :].T
 #如果最优修改量大于0，则不做处理直接跳出本次循环，这里对真实SMO做了简化处理
 if eta >= 0: print("eta>=0"); return 0
	 
2.*
对称矩阵、Hermite矩阵、正交矩阵、酉矩阵、奇异矩阵、正规矩阵、幂等矩阵
https://blog.csdn.net/jbb0523/article/details/50596604
酉矩阵 -- 正交矩阵
Hermite矩阵 -- 对称矩阵
正规矩阵 -- 酉对角化 -- AA*=A*A (A*表示酉矩阵)	

2.* 几何重数一定小于代数重数
http://blog.sina.com.cn/s/blog_4fffd58a0101n4mx.html

2.* Cayley-Hamilton定理证明
https://blog.csdn.net/u010798503/article/details/53326060


3.配置管理
3.* conda包管理
conda install ipykernel  
jupyter notebook 
source activate 环境名称 
python -m ipykernel install --user --name base --display-name "Python (base)"  

https://www.jianshu.com/p/17288627b994
https://www.jianshu.com/p/2f3be7781451

3.* jupyte notebook 本地路径修改
 a)在Anaconda Prompt终端中输入下面命令，查看你的notebook配置文件在哪里：
   jupyter notebook --generate-config
 b)打开jupyter_notebook_config.py
 c)修改c.NotebookApp.notebook_dir路径
https://www.jianshu.com/p/8f3b4333c979

3.* pycharm
function name should be lowercase
File –>Settings–>Editor–>Inspections–>Python–>PEP 8 naming convention violation

在右下角有一个Ignored errors列表控件，添加 
N802
N803
N806

4. 专栏，库，资料 
4.* 面试题
https://blog.csdn.net/sqiu_11/article/details/77657840

4.* 库
numpy
    https://www.cnblogs.com/keepgoingon/p/7137448.html
matplotlib
    https://www.jianshu.com/p/aa4150cf6c7f?winzoom=1

3.* 学习专栏
https://zhuanlan.zhihu.com/p/27662928
https://zhuanlan.zhihu.com/pytlab
http://www.cnblogs.com/pinard/default.html?page=9

4.* 机器学习入门
https://cloud.tencent.com/developer/column/1157

4.* python在线学习
https://python3-cookbook.readthedocs.io/zh_CN/latest/copyright.html

5. 书
Python 数据处理《利用python进行数据分析》
台湾教授  https://www.csie.ntu.edu.tw/~htlin/mooc/
线性代数书 华东理工 下载
http://www.book118.com/shulihua/html/shulihua_354640.html	
数学
http://www.360doc.com/content/17/0316/20/35919193_637451908.shtml
https://www.cnblogs.com/steven-yang/p/6348112.html
机器学习实战地址
https://github.com/pbharrin/machinelearninginaction.git




